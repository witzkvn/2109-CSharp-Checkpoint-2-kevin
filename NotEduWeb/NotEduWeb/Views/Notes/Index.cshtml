@model IEnumerable<NotEduWeb.Models.Notes>
@using NotEduWeb.Tools

@{
    ViewBag.Title = "Liste des notes";
}


<div class="listpage notespage">
    <h2>Liste des notes</h2>

    <a href="@Url.Action("Create","Notes")" class="btn btn-primary">
        <ion-icon name="add-circle"></ion-icon>
        Créer une note
    </a>

    @foreach (var item in Model)
    {
        <div class="listpage-item box">

            <div class="listpage-item-first">
                <span class="note-eleve">@Html.DisplayFor(modelItem => item.valeur) / 20</span> en @Html.DisplayFor(modelItem => item.Cours.nom)
            </div>

            <div class="listpage-item-second appreciation">
                @if(item.appreciation != null)
                {
                    <p class="appreciation-text">" @Html.DisplayFor(modelItem => item.appreciation) "</p>
                } else
                {
                    <p class="appreciation-text appreciation-vide">(Aucune appréciation saisie)</p>
                }
            </div>

            <div class="listpage-item-second">
                Pour l'élève :
                <a href="@Url.Action("Details", "Eleves", new { id = item.fk_note_eleve })" class="user-link">@Utilities.GetNomCompletUser(item.Eleves)</a>
                </div>
            <div class="listpage-item-buttons">
                <a href="@Url.Action("Edit","Notes",new { idEleve = item.fk_note_eleve, idCours = item.fk_note_cours })" class="btn btn-secondary">
                    Editer
                </a>
                <a href="@Url.Action("Details","Notes",new { idEleve = item.fk_note_eleve, idCours = item.fk_note_cours })" class="btn btn-secondary">
                    Détails
                </a>
                <a href="@Url.Action("Delete","Notes",new { idEleve = item.fk_note_eleve, idCours = item.fk_note_cours })" class="btn btn-warning">
                    Supprimer
                </a>
            </div>
        </div>
    }

</div>
