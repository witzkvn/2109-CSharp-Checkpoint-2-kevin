@model NotEduWeb.Models.Notes

@{
    ViewBag.Title = "Créer une note";
}

<div class="createpage">
    <h2>Créer une note</h2>

    <div class="box">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="edit-form">

            @Html.ValidationSummary(true, "", new { @class = "error" })
            <div class="form-group">
                @Html.LabelFor(model => model.valeur, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.valeur, new { htmlAttributes = new { @class = "form-control" } })
                <p class="error">
                    @Html.ValidationMessageFor(model => model.valeur, "", new { @class = "error" })
                </p>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.appreciation, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.appreciation, new { htmlAttributes = new { @class = "form-control" } })
                <p class="error">
                    @Html.ValidationMessageFor(model => model.appreciation, "", new { @class = "error" })
                </p>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fk_note_eleve, "Elève", htmlAttributes: new { @class = "control-label col-md-2" })
                <select class="form-control" id="fk_note_eleve" name="fk_note_eleve">
                    @if (ViewBag.eleves.Count > 0)
                    {
                        foreach (var item in ViewBag.eleves)
                        {
                            <option value="@item.Key">@item.Value</option>
                        }

                    }
                    else
                    {
                        <option value=""></option>
                        @Html.ActionLink("Créer un élève", "Create", "Eleves")
                    }
                </select>
                <p class="error">
                    @Html.ValidationMessageFor(model => model.fk_note_eleve, "", new { @class = "error" })
                </p>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fk_note_cours, "Cours", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownList("fk_note_cours", null, htmlAttributes: new { @class = "form-control" })
                <p class="error">
                    @Html.ValidationMessageFor(model => model.fk_note_cours, "", new { @class = "error" })
                </p>
            </div>

            <p class="error">@ViewBag.Error</p>

            <div class="editpage-buttons">
                <a class="btn btn-transparent" href="@Url.Action("Index")">Retour à la liste</a>
                <input type="submit" value="Créer" class="btn btn-secondary" />
            </div>
        </div>
        }
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
    </div>
